networks:
  oikono-backend:
    name: oikono-backend
  backend:
    name: backend
    external: true

services:
  oikono.redis:
    container_name: oikono.redis
    image: redis:latest
    restart: always
    ports:
      - 8003:6379
    networks:
      - oikono-backend
  oikono.db:
    container_name: oikono.db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    image: postgres:latest
    restart: always
    volumes:
      - appdata:/var/lib/postgresql/data
    ports:
      - 8002:5432
    networks:
      - oikono-backend
  oikono.seq:
    container_name: oikono.seq
    image: datalust/seq:latest
    restart: always
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 8004:80
    networks:
      - oikono-backend
    volumes:
      - logdata:/data
  oikono.api.green:
    container_name: oikono.api.green
    image: oikono.api
    build:
      context: .
      dockerfile: src/Oikono.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:80
      - ConnectionStrings__DbConnection=User Id=postgres;Password=postgres;Server=oikono.db;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;
      - ConnectionStrings__Redis=oikono.redis:6379
      - JwtSettings__Secret=0ba697edfae041c1c756547c88f737db379231f94cf1f89092698877d87e54a2
      - JwtSettings__ExpiryMinutes=10
      - JwtSettings__Issuer=Oikono
      - JwtSettings__Audience=Oikono  
      - Serilog__MinimumLevel__Override__Microsoft=Warning
      - Serilog__MinimumLevel__Override__System=Warning
      - Serilog__Enrich__0=FromLogContext
      - Serilog__Enrich__1__Name=WithProperty
      - Serilog__Enrich__1__Args__name=MachineName
      - Serilog__Enrich__1__Args__value=${HOSTNAME}
      - Serilog__WriteTo__0__Name=Console
      - Serilog__WriteTo__1__Name=File
      - Serilog__WriteTo__1__Args__formatter=Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact
      - Serilog__WriteTo__1__Args__path=/var/log/api/log-.txt
      - Serilog__WriteTo__1__Args__rollingInterval=Day
      - Serilog__WriteTo__2__Name=Seq
      - Serilog__WriteTo__2__Args__serverUrl=http://oikono.seq:5341
      - Serilog__Enrich__2__Name=WithProperty
      - Serilog__Enrich__2__Args__name=Application
      - Serilog__Enrich__2__Args__value=Oikono
    ports:
      - 8100:80
    networks:
      - oikono-backend
      - backend
    volumes:
      - logdata:/var/logs
#  oikono.api.blue:
#    container_name: oikono.api.blue
#    image: oikono.api
#    build:
#      context: .
#      dockerfile: src/oikono.Api/Dockerfile
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#      - ASPNETCORE_URLS=http://*:80
#      - ConnectionStrings__DbConnection=User Id=postgres;Password=postgres;Server=oikono.db;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;
#      - ConnectionStrings__Redis=oikono.redis:6379
#      - JwtSettings__Secret=0ba697edfae041c1c756547c88f737db379231f94cf1f89092698877d87e54a2
#      - JwtSettings__ExpiryMinutes=10
#      - JwtSettings__Issuer=Oikono
#      - JwtSettings__Audience=Oikono
#    ports:
##      - "${ADDRESS}:8200:80"
#      - 8200:80
#    depends_on:
#      - oikono.db
#      - oikono.redis
#      - oikono.seq
#    networks:
#      - oikono-backend
#  oikono.api.white:
#    container_name: oikono.api.white
#    image: oikono.api
#    build:
#      context: .
#      dockerfile: src/oikono.Api/Dockerfile
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#      - ASPNETCORE_URLS=http://*:80
#      - ConnectionStrings__DbConnection=User Id=postgres;Password=postgres;Server=oikono.db;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;
#      - ConnectionStrings__Redis=oikono.redis:6379
#      - JwtSettings__Secret=0ba697edfae041c1c756547c88f737db379231f94cf1f89092698877d87e54a2
#      - JwtSettings__ExpiryMinutes=10
#      - JwtSettings__Issuer=Oikono
#      - JwtSettings__Audience=Oikono
#    ports:
##      - "${ADDRESS}:8300:80"
##      - "${ADDRESS}:8301:443"
#      - 8300:80
#      - 8301:443
#    depends_on:
#      - oikono.db
#      - oikono.redis
#      - oikono.seq
#    networks:
#      - oikono-backend
#  oikono.loadbalancer:
#    container_name: oikono.loadbalancer
#    image: oikono.loadbalancer
#    build:
#      context: .
#      dockerfile: src/oikono.LoadBalancer/Dockerfile
#    restart: always
#    ports:
##      - "${ADDRESS}:8001:80"
#      - 8001:80
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#      - ASPNETCORE_URLS=http://*:80
#      - ReverseProxy__Clusters__api__Destinations__green__Address=http://oikono.api.green:80
#      - ReverseProxy__Clusters__api__Destinations__blue__Address=http://oikono.api.blue:80
#      - ReverseProxy__Clusters__api__Destinations__white__Address=http://oikono.api.white:80
#      - ReverseProxy__Clusters__api__LoadBalancingPolicy=RoundRobin
#      - ReverseProxy__Routes__api__ClusterId=api
#      - ReverseProxy__Routes__api__Match__Path={**catch-all}
#      - ConnectionStrings__DbConnection=User Id=postgres;Password=postgres;Server=oikono.db;Port=5432;Database=postgres;Integrated Security=true;Pooling=true;
#      - ConnectionStrings__Redis=oikono.redis:6379
#      - JwtSettings__Secret=0ba697edfae041c1c756547c88f737db379231f94cf1f89092698877d87e54a2
#      - JwtSettings__ExpiryMinutes=10
#      - JwtSettings__Issuer=Oikono
#      - JwtSettings__Audience=Oikono
#    depends_on:
#      - oikono.api.green
#      - oikono.api.blue
#      - oikono.api.white
#    networks:
#      - oikono-backend

volumes:
  appdata:
  logdata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: 'C:/Log/Oikono'