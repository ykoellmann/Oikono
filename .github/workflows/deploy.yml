name: Build & Deploy to Pi

on:
  push:
    tags:
      - 'v*' # Trigger bei neuen Versionstags

jobs:
  build-and-deploy:
    runs-on: self-hosted
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # Build API image
      - name: Build API
        run: |
          docker build --platform linux/arm64
          -f src/Oikono.Api/Dockerfile \
            -t ghcr.io/ykoellmann/oikono.api:arm64 .
          docker push ghcr.io/ykoellmann/oikono.api:arm64

      # Build Loadbalancer image
      - name: Build Loadbalancer
        run: |
          docker build --platform linux/arm64 -f src/Oikono.LoadBalancer/Dockerfile \
            -t ghcr.io/ykoellmann/oikono.loadbalancer:arm64 .
          docker push ghcr.io/ykoellmann/oikono.loadbalancer:arm64

      # Build Frontend image
      - name: Build & Push Frontend
        run: |
          docker build \
            -f src/Oikono.Web/oikono/Dockerfile \
            -t ghcr.io/ykoellmann/oikono.web:arm64 src/Oikono.Web/oikono
          docker push ghcr.io/ykoellmann/oikono.web:arm64

      # Deploy auf Pi
      - name: Pull & Start containers
        run: |
          docker-compose -f docker-compose.api.yml pull
          docker-compose -f docker-compose.api.yml up -d
          docker-compose -f src/Oikono.Web/oikono/docker-compose.web.yml pull
          docker-compose -f src/Oikono.Web/oikono/docker-compose.web.yml up -d
